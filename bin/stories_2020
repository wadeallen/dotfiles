#!/usr/bin/env python3

import frontmatter
import os
import glob
import wget
import re
from titlecase import titlecase
import operator
from datetime import datetime
from datetime import timedelta
import csv
import pandas as pd

# surpresses the download message of files
def bar_none(current, total, width=80):
    return '';

def format_slug(text):
	title_sliced = text.split()
	slug = ("-".join(title_sliced).lower())
	slug = slug.replace("?", "")
	slug = slug.replace("'", "")
	slug = re.sub("[\(\[].*?[\)\]]", "", slug)
	return slug

includes_dir = '/home/wadeallen/Dropbox/Compile/bulletin/includes/'

# get current visitor
current_visitor = includes_dir + 'current_visitor.tex'
open(current_visitor,  "w").close()

visitor_df = pd.read_csv('/home/wadeallen/Sites/fbcmuncie_2020/data/visitors.csv', sep=',', nrows=1, header=None)

for m in visitor_df.values:
	month = m[1]
	with open(current_visitor, "a") as currentvisitor:
		currentvisitor.write(f'\\subsection{{{month} Visitor}} \n\n The {month} Visitor is now available on the church website. You can download it at \\textsl{{fbcmuncie.org/visitor}} \n\n \\vfill \n\n')


# move to directory in Dropbox to do the work
stories_dir = '/home/wadeallen/Dropbox/Stories/'
os.chdir(stories_dir)

# delete old files
os.system('rm ' + stories_dir + '*.md')

# file downloaded from Google Docs and stored as local text file
# it is worth noting that the Google Doc must be shared with an editable link
file_name = "stories.txt"
url = 'https://docs.google.com/document/d/1Yq9AF5_T4UwHX2JtzmTX9QfviWBDauqhTRW6498S1mY/export?format=txt'
wget.download(url, file_name, bar = bar_none)

# The file is then split into multiple files
# Be sure to have a file split at the beginning of the document
files = open(file_name,'r').read().split('*****')
names = ['story-'+ str(num) + '.md' for num in range(len(files))]
for num,file in enumerate(files):
    open(names[num],'w').write(file)

# Remove these files, no longer needed
os.remove('story-0.md')
os.remove('stories.txt')

# Grab stories for further use from the text files
path = 'story-[1-9]*.md'
stories = glob.glob(path)
stories =  sorted(stories)


# Sort out Stories for 2020 Website
website_dir = '/home/wadeallen/Sites/fbcmuncie_2020/content/news/'
os.system('rm ' + website_dir + '*.md')
for story in stories:
	post = frontmatter.load(story)
	if 'website' in post['publications'] and post.get('event') == None:
		title = post['title']
		title = titlecase(title)
		slug = format_slug(title)
		filename = website_dir + slug + '.md'
		target = open (filename, 'w')
		target.write("---\n")
		target.write("title: {}\n".format(title))
		target.write("weight: {}\n".format(post['weight']))
		target.write("---\n")
		target.write("\n")
		# replaces content of print with website version of file
		post.content = re.sub(r'\{\{print:(.*?)\}\}*\{\{website:(.*?)\}\}', r'\2', post.content.rstrip())
		target.write(post.content)
		target.close()

# events for 2020 website
website_dir = '/home/wadeallen/Sites/fbcmuncie_2020/content/events/'
os.system('rm ' + website_dir + '*.md')
for story in stories:
	post = frontmatter.load(story)
	if 'website' in post['publications'] and post.get('event') != None: 
		if post.get('event') == True:
			title = post['title']
			title = titlecase(title)
			slug = format_slug(title)
			filename = website_dir + slug + '.md'
			event_date = datetime.strptime(post['date'], '%Y-%m-%d %H:%M')
			target = open (filename, 'w')
			target.write("---\n")
			target.write("title: {}\n".format(title))
			target.write("weight: {}\n".format(post['weight']))
			target.write("date: {}\n".format(event_date))
			target.write("---\n")
			target.write("\n")
			# replaces content of print with website version of file
			post.content = re.sub(r'\{\{print:(.*?)\}\}*\{\{website:(.*?)\}\}', r'\2', post.content.rstrip())
			target.write(post.content)
			target.close()


# # Create file for Visitor
# visitor_path = '/home/wadeallen/Dropbox/Pandoc/Pandoc_Visitor/'
# os.system('rm ' + visitor_path + 'articles.txt')
# article_list = []
# for story in stories:
# 	post = frontmatter.load(story)
# 	if 'visitor' in post['publications']:
# 		title = post['title']
# 		# makes all of the titles titlecase
# 		title = titlecase(title)
# 		if post.get('picture') != None:
# 			picture = post.get('picture')
# 		else:
# 			picture = 'no picture'
# 		# for these articles, the print section is used and the website section is taken out
# 		content = re.sub(r'\{\{print:(.*?)\}\}*\{\{website:(.*?)\}\}', r'\1', post.content.rstrip())
# 		content = content.replace(r"\n", r"\n\n")
# 		# forms a sublist that includes title[0], content[1], weight[2]
# 		article = [title, content, post['weight'], picture]
# 		# builds the article list with a sublist of each article
# 		article_list.append(article)

# # sorts articles by weight[2]
# article_list.sort(key=lambda x: int(x[2]))

# # interates through each article (sorted by weight) and places them in the articles.txt file to be compiled by the visitor script
# for article in article_list:
# 	with open(visitor_path + "articles.txt", "a") as visitor_file:
# 			visitor_file.write('\n\n')
# 			visitor_file.write('# ' + article[0] + '\n\n')
# 			# if the article has a picture: name then it will place the latex code to generate that picture, if not, it will do nothing.
# 			if article[3] != 'no picture':
# 				# visitor_file.write('\\setlength\intextsep{0pt}')
# 				visitor_file.write('\\begin{wrapfigure}{r}{.20\\textwidth}\n')
# 				visitor_file.write('\\vspace{-5mm}')
# 				visitor_file.write('\includegraphics[width=.18\\textwidth]{people/' + article[3] + '}\n')
# 				visitor_file.write('\end{wrapfigure}\n\n')
# 			visitor_file.write(article[1] + '\n\n')

# with open(visitor_path + "articles.txt", "a") as visitor_file:
# 	visitor_file.write('\n\input{includes/birthdays.tex}\n')



# for weekly events to website
# weekly_events_file = "/home/wadeallen/Sites/fbcmuncie_2020/layouts/partials/weekly-events.html"
# days_of_week = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday']
# for day in days_of_week:
# 	globals()[day]=[]
# for story in stories:
# 	post = frontmatter.load(story)
# 	if post.get('event') != None and 'weekly' in post['publications']:
# 		if post.get('event') == 'weekly':
# 			day = post.get('day')
# 			time = post.get('time')
# 			title = post['title']
# 			globals()[day.lower()].append({'title' : title, 'time' : time})
# target = open(weekly_events_file, 'w')
# target.write('<div class="col-12 col-md-6 col-lg-6 offset-lg-1"><div class="card card-border border-success shadow-lg mb-5" data-aos="fade-up"><div class="card-body"><div class="list-group list-group-flush">')
# for d in days_of_week:
# 	if globals()[d] != []:
# 		target.write('<div class="list-group-item d-flex align-items-center"><div class="mr-auto">')
# 		target.write(f'<p class="font-weight-bold mb-1">{d.title()}</p>')
# 		for e in globals()[d]:
# 			title = e.get('title')
# 			time = e.get('time')
# 			target.write(f'<p class="font-size-sm text-muted mb-0">{time} {title}</p>')
# 		target.write('</div></div>')
# target.write('</div></div><p class="font-size-sm text-center text-gray-500 mb-0">Weekly Events</p></div></div>')
# target.close()

# events for website table



# Create LaTeX file for Bulletin 2020 (non-events)
bulletin_path = '/home/wadeallen/Dropbox/Compile/bulletin/'
os.system('rm ' + bulletin_path + 'articles.txt')
article_list = []
for story in stories:
	post = frontmatter.load(story)
	if 'bulletin' in post['publications'] and post.get('event') != True:
		title = post['title']
		title = titlecase(title)
		content = re.sub(r'\{\{print:(.*?)\}\}*\{\{website:(.*?)\}\}', r'\1', post.content.rstrip())
		content = content.replace(r"\n", r"\n\n")
		# forms a sublist that includes title[0], content[1], weight[2]
		article = [title, content, post['weight']]
		# builds the article list with a sublist of each article
		article_list.append(article)

# sorts articles by weight[2]
article_list.sort(key=lambda x: int(x[2]))

# add header to articles.txt
with open(bulletin_path + "articles.txt", "a") as bulletin_file:
	bulletin_file.write('\\section{\\faBullhorn \\hspace{.5em} Announcements}\n\n')
	bulletin_file.write('\\input{includes/current_visitor.tex} \n\n')

# interates through each article (sorted by weight) and places them in the articles.txt file to be compiled by the visitor script
for article in article_list:
	with open(bulletin_path + "articles.txt", "a") as bulletin_file:
		bulletin_file.write('## ' + article[0] + '\n\n')
		bulletin_file.write(article[1] + '\n\n')
		bulletin_file.write('\\vspace{\\fill}\n\n')

# create LaTeX file for bulletin events
bulletin_path = '/home/wadeallen/Dropbox/Compile/bulletin/'
event_list = []
for story in stories:
	post = frontmatter.load(story)
	if 'bulletin' in post['publications'] and post.get('event') == True:
		title = post['title']
		title = titlecase(title)
		content = re.sub(r'\{\{print:(.*?)\}\}*\{\{website:(.*?)\}\}', r'\1', post.content.rstrip())
		content = content.replace(r"\n", r"\n\n")
		date = post.get('date')
		where = post.get('where')
		what = post.get('what')
		# forms a sublist that includes title[0], content[1], weight[2]
		event = [title, date, where, content, what]
		# builds the article list with a sublist of each article
		event_list.append(event)

def takeSecond(elem):
    return elem[1]

event_list = sorted(event_list, key=takeSecond)
with open(bulletin_path + "articles.txt", "a") as events_file:
	events_file.write('\\pagebreak \\section{\\faCalendarPlusO  \\hspace{.5em} Events}\n\n')

for event in event_list:
	with open(bulletin_path + "articles.txt", "a") as bulletin_file:
		title = event[0]
		date = datetime.strptime(event[1], "%Y-%m-%d %H:%M")
		where = event[2]
		day = date.strftime("%A, %B %d")
		time = date.strftime("%-I:%M %p")
		content = event[3]
		what = event[4]
		bulletin_file.write(f'## {title} \n\n')
		if what != None:
			bulletin_file.write(f'\\textsl{{{what}}} \n\n')
		bulletin_file.write(f'\\eventdate {day}')
		if time != "12:00 AM":
			bulletin_file.write(f'\\eventtime {time} \n\n')
		else:
			bulletin_file.write('\n\n')
		bulletin_file.write(f'\\eventlocation {where}\n\n')
		bulletin_file.write(f'{content}')
		bulletin_file.write('\\vspace{\\fill}\n\n')


# Weekly Calendar in Bulletin
weekly_file = includes_dir + 'weekly_events.tex'
open(weekly_file,  "w").close()
	
df = pd.read_csv('/home/wadeallen/Dropbox/Compile/bulletin/calendar.tsv', sep='\t')
days = df['sdate'].unique().tolist()

with open(weekly_file, "a") as weekly:
	for day in days:
		weekday = datetime.strptime(day, "%Y-%m-%d")
		weekly.write(f'\\bfseries\\scshape {weekday.strftime("%a, %b %d")}\n\n')
		ev = df.loc[df['sdate'] == day]
		weekly.write('\\begin{tabular}{r p{0.7\\textwidth}}\n')
		for e in ev.values:
			time = datetime.strptime(e[1], "%H:%M")
			title = e[4]
			weekly.write(f'\\normalfont\\scshape {time.strftime("%-I:%M %p")} & \\normalfont {title} \\\\ \n')
		weekly.write('\\end{tabular}\n')
		weekly.write('\\normalfont \\vspace{1em} \\\\ \n')
	weekly.write('\\input{includes/calendar-extended.tex}\n')













