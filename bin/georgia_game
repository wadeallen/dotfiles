#!/usr/bin/env python3

import requests
import datetime
import json
import zulu
import pytz

utc = pytz.UTC
local_tz = pytz.timezone('US/Eastern')
current_time = datetime.datetime.now().replace(tzinfo=pytz.utc).astimezone(local_tz)

r = requests.get('http://site.api.espn.com/apis/site/v2/sports/football/college-football/teams/Georgia')
data = r.json()

game = data['team']['nextEvent'][0]['shortName']
when = data['team']['nextEvent'][0]['date']
when = zulu.parse(when).datetime
when = when.replace(tzinfo=pytz.utc).astimezone(local_tz)
broadcast = data['team']['nextEvent'][0]['competitions'][0]['broadcasts'][0]['media']['shortName']
score_available = data['team']['nextEvent'][0]['competitions'][0]['boxscoreAvailable']
home_team = data['team']['nextEvent'][0]['competitions'][0]['competitors'][0]['team']['nickname']
away_team = data['team']['nextEvent'][0]['competitions'][0]['competitors'][1]['team']['nickname']
rank = data['team']['rank']
sec_standing = data['team']['standingSummary']

if score_available is False:
    print(f"{when.strftime('%a %-I:%M %p')} {game} on {broadcast}")
    print(f"\t{sec_standing}")
    print(f"\tRank: {rank}")
else:
    home_score = data['team']['nextEvent'][0]['competitions'][0]['competitors'][0]['score']['value']
    away_score = data['team']['nextEvent'][0]['competitions'][0]['competitors'][1]['score']['value']
    print(f"{away_team} {round(away_score)} {home_team} {round(home_score)}")


